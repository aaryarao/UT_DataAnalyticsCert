/*
-----------------------------------------------------------------------------------------------------------------------------------
													    Guidelines
-----------------------------------------------------------------------------------------------------------------------------------

The provided document is a guide for the project. Follow the instructions and take the necessary steps to finish
the project in the SQL file			

-----------------------------------------------------------------------------------------------------------------------------------
                                                         Queries
                                               
-----------------------------------------------------------------------------------------------------------------------------------*/
  
/*-- QUESTIONS RELATED TO CUSTOMERS
     [Q1] What is the distribution of customers across states?
     Hint: For each state, count the number of customers.*/

SELECT 
    state, COUNT(DISTINCT customer_id) AS number_customers
FROM
    customer_t
GROUP BY 1
ORDER BY 1 ASC;
 
-- ---------------------------------------------------------------------------------------------------------------------------------

/* [Q2] What is the average rating in each quarter?
-- Very Bad is 1, Bad is 2, Okay is 3, Good is 4, Very Good is 5.

Hint: Use a common table expression and in that CTE, assign numbers to the different customer ratings. 
      Now average the feedback for each quarter. 

Note: For reference, refer to question number 4. Week-2: mls_week-2_gl-beats_solution-1.sql. 
      You'll get an overview of how to use common table expressions from this question.*/

WITH avg_rating AS (
	SELECT quarter_number, customer_feedback,
CASE
	WHEN customer_feedback = 'Very Bad' THEN '1'
	WHEN customer_feedback = 'Bad' THEN '2'
	WHEN customer_feedback = 'Okay' THEN '3'
	WHEN customer_feedback = 'Good' THEN '4'
	WHEN customer_feedback = 'Very Good' THEN '5'
END AS rating
FROM order_t)
SELECT 
    quarter_number, ROUND(AVG(rating),2) AS average_rating
FROM
    avg_rating
GROUP BY 1
ORDER BY 1 ASC;

-- ---------------------------------------------------------------------------------------------------------------------------------

/* [Q3] Are customers getting more dissatisfied over time?

Hint: Need the percentage of different types of customer feedback in each quarter. Use a common table expression and
	  determine the number of customer feedback in each category as well as the total number of customer feedback in each quarter.
	  Now use that common table expression to find out the percentage of different types of customer feedback in each quarter.
      Eg: (total number of very good feedback/total customer feedback)* 100 gives you the percentage of very good feedback.
      
Note: For reference, refer to question number 4. Week-2: mls_week-2_gl-beats_solution-1.sql. 
You'll get an overview of how to use common table expressions from this question.*/

WITH c_feedback AS (
	SELECT quarter_number, 
    SUM(CASE WHEN customer_feedback = 'Very Bad' THEN 1 ELSE 0 END) AS very_bad_answers,
    SUM(CASE WHEN customer_feedback = 'Bad' THEN 1 ELSE 0 END) AS bad_answers,
    SUM(CASE WHEN customer_feedback = 'Okay' THEN 1 ELSE 0 END) AS okay_answers,
    SUM(CASE WHEN customer_feedback = 'Good' THEN 1 ELSE 0 END) AS good_answers,
    SUM(CASE WHEN customer_feedback = 'Very Good' THEN 1 ELSE 0 END) AS very_good_answers,
    SUM(CASE WHEN customer_feedback != ' ' THEN 1 ELSE 0 END) AS total_answers
    FROM order_t 
    GROUP BY 1
    ORDER BY 1 ASC)
    SELECT 
    quarter_number,
    ROUND( very_bad_answers/total_answers * 100, 2) AS percent_verybad,
    ROUND( bad_answers/total_answers * 100, 2) AS percent_bad,
    ROUND( okay_answers/total_answers * 100, 2) AS percent_okay,
    ROUND( good_answers/total_answers * 100, 2)  AS percent_good,
    ROUND( very_good_answers/total_answers * 100, 2) AS percent_verygood
FROM
    c_feedback
GROUP BY 1
ORDER BY 1 ASC;

-- ---------------------------------------------------------------------------------------------------------------------------------

/*[Q4] Which are the top 5 vehicle makers preferred by the customer.

Hint: For each vehicle make what is the count of the customers.*/

SELECT 
    prod.vehicle_maker,
    COUNT(ord.customer_id) AS number_customers
FROM
    order_t ord
        JOIN
    product_t prod ON ord.product_id = prod.product_id
GROUP BY 1
ORDER BY 2 DESC
LIMIT 5;

-- ---------------------------------------------------------------------------------------------------------------------------------

/*[Q5] What is the most preferred vehicle make in each state?

Hint: Use the window function RANK() to rank based on the count of customers for each state and vehicle maker. 
After ranking, take the vehicle maker whose rank is 1.*/ 

WITH state_count AS (
	SELECT cust.state, prod.vehicle_maker,
    COUNT(DISTINCT ord.customer_id) AS no_customers
    FROM order_t ord
    JOIN product_t prod ON ord.product_id=prod.product_id
    JOIN customer_t cust ON ord.customer_id=cust.customer_id
    GROUP BY 1,2),
    
    vehicle_rank AS (
    SELECT 
		*, DENSE_RANK() OVER 
			(partition by state 
            order by no_customers DESC, vehicle_maker ASC) 
				AS ranks 
                FROM state_count)
    SELECT 
    state, vehicle_maker, no_customers
FROM
    vehicle_rank
WHERE
    ranks = 1
ORDER BY state ASC;
    
-- ---------------------------------------------------------------------------------------------------------------------------------

/*QUESTIONS RELATED TO REVENUE and ORDERS 

-- [Q6] What is the trend of number of orders by quarters?

Hint: Count the number of orders for each quarter.*/

SELECT 
    quarter_number, COUNT(DISTINCT order_id) AS num_orders
FROM
    order_t
GROUP BY 1
ORDER BY 1 ASC;

-- ---------------------------------------------------------------------------------------------------------------------------------

/* [Q7] What is the quarter over quarter % change in revenue? 

Hint: Quarter over Quarter percentage change in revenue means what is the change in revenue from the subsequent quarter to the previous quarter in percentage.
      To calculate you need to use the common table expression to find out the sum of revenue for each quarter.
      Then use that CTE along with the LAG function to calculate the QoQ percentage change in revenue.
*/
      
  WITH qoq AS (
	SELECT 
		quarter_number, 
		ROUND(SUM(vehicle_price * quantity * (1 - discount)),2) AS q_rev,
        ROUND(LAG(SUM(vehicle_price * quantity * (1 - discount))) OVER (ORDER BY quarter_number ASC), 2) AS qrev_prev 
        FROM 
		order_t 
	GROUP BY 1)
 SELECT 
    quarter_number,
    q_rev,
    qrev_prev,
    ROUND((qrev_prev - q_rev) / qrev_prev * 100, 2) AS qoq_percent_change
FROM
    qoq
ORDER BY 1 ASC;
    
-- ---------------------------------------------------------------------------------------------------------------------------------

/* [Q8] What is the trend of revenue and orders by quarters?

Hint: Find out the sum of revenue and count the number of orders for each quarter.*/

SELECT 
    quarter_number,
    COUNT(DISTINCT order_id) AS num_orders,
    ROUND(SUM(vehicle_price * quantity * (1 - discount)),
            2) AS sum_rev
FROM
    order_t
GROUP BY 1
ORDER BY 1 ASC;

-- ---------------------------------------------------------------------------------------------------------------------------------

/* QUESTIONS RELATED TO SHIPPING 
    [Q9] What is the average discount offered for different types of credit cards?

Hint: Find out the average of discount for each credit card type.- cust t (cust id and cc type) and order t (cust id and discount) AVG OVER */

SELECT 
    c.credit_card_type, AVG(ord.discount) AS avg_discount
FROM
    order_t ord
        JOIN
    customer_t c ON c.customer_id = ord.customer_id
GROUP BY 1
ORDER BY 1 ASC;

-- ---------------------------------------------------------------------------------------------------------------------------------

/* [Q10] What is the average time taken to ship the placed orders for each quarters?
	Hint: Use the datediff function to find the difference between the ship date and the order date.*/

SELECT 
    quarter_number,
    ROUND(AVG(DATEDIFF(ship_date, order_date)), 2) AS avg_time
FROM
    order_t
GROUP BY 1
ORDER BY 1 ASC; 

-- --------------------------------------------------------Done----------------------------------------------------------------------
-- ----------------------------------------------------------------------------------------------------------------------------------